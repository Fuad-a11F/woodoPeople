"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createClientAndConnect = exports.recreateTables = exports.sequelize = void 0;
const Reply_1 = require("./models/Reply");
const Topic_1 = require("./models/Topic");
const Comment_1 = require("./models/Comment");
const sequelize_typescript_1 = require("sequelize-typescript");
const { POSTGRES_USER, POSTGRES_PASSWORD, POSTGRES_PORT } = process.env;
exports.sequelize = new sequelize_typescript_1.Sequelize({
    dialect: 'postgres',
    host: 'localhost',
    port: Number(POSTGRES_PORT) || 5432,
    username: POSTGRES_USER,
    password: String(POSTGRES_PASSWORD),
    database: 'postgres',
    models: [Topic_1.Topic, Comment_1.Comment, Reply_1.Reply],
    logging: false,
});
const recreateTables = async () => {
    try {
        console.log('üü° –£–¥–∞–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü...');
        await exports.sequelize.drop(); // –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü
        console.log('‚úÖ –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã —É–¥–∞–ª–µ–Ω—ã.');
        console.log('üü° –ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü...');
        await exports.sequelize.sync({ force: true }); // –ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü
        console.log('‚úÖ –¢–∞–±–ª–∏—Ü—ã –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω—ã.');
    }
    catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü:', error);
        process.exit(1);
    }
};
exports.recreateTables = recreateTables;
const createClientAndConnect = async () => {
    try {
        console.log('üü° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
        await exports.sequelize.authenticate();
        console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ.');
        // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–µ–π —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
        await exports.sequelize.sync({ alter: true });
        console.log('‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.');
    }
    catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', error);
        process.exit(1);
    }
};
exports.createClientAndConnect = createClientAndConnect;
// export const createClientAndConnect = async () => {
//   try {
//     console.log('üü° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
//     await sequelize.authenticate();
//     console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ.');
//     // –£–¥–∞–ª–µ–Ω–∏–µ –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü
//     await recreateTables();
//   } catch (error) {
//     console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', error);
//     process.exit(1);
//   }
// };
